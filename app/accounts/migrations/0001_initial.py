# Generated by Django 5.1.6 on 2025-03-09 22:36

import app.core.utils.fields
import app.core.utils.models
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('phone_number', app.core.utils.fields.AppCharField(blank=True, max_length=20, null=True, unique=True, verbose_name='Phone Number')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='Email address')),
                ('full_name', app.core.utils.fields.AppCharField(blank=True, max_length=150, null=True, verbose_name='Full name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
        migrations.CreateModel(
            name='AvailableCountry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('name', app.core.utils.fields.AppCharField(default=None, max_length=50)),
                ('dial_code', app.core.utils.fields.AppCharField(default=None, max_length=5, unique=True)),
                ('iso_code', app.core.utils.fields.AppCharField(default=None, max_length=10, unique=True)),
                ('phone_number_regex', app.core.utils.fields.AppCharField(default=None, max_length=50)),
            ],
            options={
                'indexes': [models.Index(fields=['iso_code'], name='accounts_av_iso_cod_5b08cd_idx')],
            },
            bases=(models.Model, app.core.utils.models.ExtraModel),
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('phone_number', app.core.utils.fields.AppCharField(default=None, max_length=20, verbose_name='Phone Number')),
                ('intl_phone_number', app.core.utils.fields.AppCharField(default=None, max_length=20, verbose_name='Phone Number')),
                ('number', app.core.utils.fields.AppCharField(default=None, max_length=16, unique=True, verbose_name='Account number')),
                ('balance', models.FloatField(default=0, verbose_name='Account balance')),
                ('payment_code', app.core.utils.fields.AppCharField(blank=True, default=None, max_length=255, verbose_name='Payment Qr Code')),
                ('owner_email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='Email address')),
                ('owner_first_name', app.core.utils.fields.AppCharField(blank=True, max_length=50, null=True, verbose_name='Firstname')),
                ('owner_last_name', app.core.utils.fields.AppCharField(blank=True, max_length=50, null=True, verbose_name='Lastname')),
                ('pin', app.core.utils.fields.AppCharField(max_length=255, null=True, verbose_name='Pin code')),
                ('is_active', models.BooleanField(default=True)),
                ('is_master', models.BooleanField(default=False)),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='accounts', to='accounts.availablecountry')),
            ],
            bases=(models.Model, app.core.utils.models.ExtraModel),
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('iso_code', models.CharField(max_length=8)),
                ('name', models.CharField(max_length=100)),
                ('symbol', models.CharField(max_length=5)),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.availablecountry')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, app.core.utils.models.ExtraModel),
        ),
        migrations.CreateModel(
            name='SupportedMobileMoneyCarrier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('name', app.core.utils.fields.AppCharField(default=None, max_length=254, verbose_name='Name')),
                ('code', app.core.utils.fields.AppCharField(default=None, max_length=254, unique=True, verbose_name='Code')),
                ('flag', models.ImageField(upload_to='', verbose_name='Flag')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='carriers', to='accounts.availablecountry')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, app.core.utils.models.ExtraModel),
        ),
        migrations.CreateModel(
            name='PhoneNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('number', app.core.utils.fields.AppCharField(default=None, max_length=20)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='phone_numbers', to='accounts.account', verbose_name='Account')),
                ('carrier', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='phonenumbers', to='accounts.supportedmobilemoneycarrier')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, app.core.utils.models.ExtraModel),
        ),
        migrations.AddIndex(
            model_name='account',
            index=models.Index(fields=['intl_phone_number'], name='accounts_ac_intl_ph_eb5656_idx'),
        ),
    ]
